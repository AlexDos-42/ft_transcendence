Things left to in the pong:

|v|passer le socket store sous pinia.

Game request:
4| |gérer les déconnexion lors de game request en cours.
5| |sécuriser l'input des private game request. (settings)
|V|bloquer les demandes à un user en jeu.

inGame/multi onglet:
|V|User en jeu ne peux rejoindre le matchmaking.
|V|ajouter un event "leavegame", qui fait quitter la room.
|V|côté front, pong view, if (inGame) -> redirect to the game. in mounted maybe.

UI:
1| |améliorer le modal (utiliser boostrap) quand on reçoit une gameRequest.
2| |Donner plus d'infos, que juste le userId au front. (username surtout)
3| |avoir un bouton de redirection à la fin d'une game.

__________Done things:_____________

|V|endpoint pour récupérer les games d'un users.

|V|gérer la personnalisation des games:
	|V|front: 
		|V|pop up en deux temps.
			|V|gérer un form dans le premier temps.
			|V|envoyer les game params dans le socket event.
			|V|2ème temps attendre la reponse.

	|V|back:
		|V|ajouter GameParams dans le construteur pongGame.
			-->avec params par défaut si possible.
		|V|gérer les params dans le pongGame.
		|V|recevoir les gameParams dans l'event gameRequest,
		|V|associer ces params à la requête.
		|V|utiliser ces params pour créer la game.

|V|gérer le mode specateur:
	|V|créer une method pour avoir l'id de la game en fonction de userId.

|V|InGameUsers:
	|V|Créer un tableau auquel on ajoute l'id des users en jeux.
	|V|ajouter l'id d'un user quand une game est crée.
	|V|supprimer l'id d'un user quand la game est finie.

|V|Gérer l'enregistrement des games dans la db.
	|V|définir quoi enregistrer et sous quel forme.
	|v|comprendre comment enregistrer quelque chose dans la db.
	|V|coder les fonctions pour enregistrer.